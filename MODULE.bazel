"Bazel dependencies"

# When editing bazel deps, also update the bazel lockfile:
#   bazel mod deps --lockfile_mode=update
bazel_dep(name = "aspect_bazel_lib", version = "2.7.0")
bazel_dep(name = "container_structure_test", version = "1.16.0")
bazel_dep(name = "rules_jvm_external", version = "6.0")
bazel_dep(name = "rules_oci", version = "1.7.5")
bazel_dep(name = "buildifier_prebuilt", version = "6.4.0", dev_dependency = True)
bazel_dep(name = "gazelle", version = "0.36.0")
bazel_dep(name = "rules_go", version = "0.46.0")
bazel_dep(name = "contrib_rules_jvm", version = "0.24.0")

# Update maven deps by editing deps below and then running:
#   bazel run @unpinned_maven//:pin
JUNIT_JUPITER_VERSION = "5.10.2"
JUNIT_PLATFORM_VERSION = "1.10.2"
maven = use_extension("@rules_jvm_external//:extensions.bzl", "maven")
maven.install(
  artifacts = [
  ],
  repositories = [
    "https://repo1.maven.org/maven2",
    "https://maven.google.com",
  ],
  lock_file = "//:maven_install.json",
  fail_if_repin_required = True,
  fetch_sources = True,
)
[
  maven.artifact(
    testonly = True,
    artifact = artifact,
    group = group,
    version = version,
  )
  for group, artifact, version in [coord.split(":") for coord in [
    # JUnit5
    "org.junit.platform:junit-platform-launcher:%s" % JUNIT_PLATFORM_VERSION,
    "org.junit.platform:junit-platform-reporting:%s" % JUNIT_PLATFORM_VERSION,
    "org.junit.jupiter:junit-jupiter-api:%s" % JUNIT_JUPITER_VERSION,
    "org.junit.jupiter:junit-jupiter-params:%s" % JUNIT_JUPITER_VERSION,
    "org.junit.jupiter:junit-jupiter-engine:%s" % JUNIT_JUPITER_VERSION,    
    # JUnit4
    # "junit:junit:4.13.2",
  ]]
]
use_repo(maven, "maven", "unpinned_maven")

oci = use_extension("@rules_oci//oci:extensions.bzl", "oci")
oci.pull(
  name = "distroless_java",
  digest = "sha256:a06bbc590222e4a81645e9d06b8167b3b34b32e5c1bc73368226903e3bb2378b",
  image = "gcr.io/distroless/java11-debian11",
)
use_repo(oci, "distroless_java")
